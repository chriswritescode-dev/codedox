# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=codedox
DB_USER=postgres
DB_PASSWORD=postgres

# LLM Configuration
LLM_ENDPOINT=http://localhost:8080
LLM_MODEL=gpt-4
LLM_API_KEY=your-api-key-here
LLM_MAX_TOKENS=1000
LLM_TEMPERATURE=0.1
LLM_MAX_CONCURRENT_REQUESTS=20
LLM_REQUEST_TIMEOUT=30.0
LLM_RETRY_ATTEMPTS=3

# MCP Server Configuration
# Note: MCP tools are served via the main API server on API_PORT (8000)
# The settings below are only used if running standalone MCP server with stdio mode
MCP_PORT=8899
MCP_HOST=localhost
MCP_MAX_CONNECTIONS=10

# API Server Configuration
API_HOST=0.0.0.0
API_PORT=8000
# CORS origins as comma-separated values
API_CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8000
API_MAX_REQUEST_SIZE=10485760  # 10MB

# Crawling Configuration
CRAWL_DEFAULT_MAX_DEPTH=2
CRAWL_MAX_PAGES_PER_JOB=500
CRAWL_RESPECT_ROBOTS_TXT=true
CRAWL_MAX_CONCURRENT_PAGES=3
CRAWL_CONTENT_SIZE_LIMIT=50000
CRAWL_USER_AGENT=RAG-Pipeline/1.0 (Documentation Crawler)
CRAWL_MAX_CONCURRENT_SESSIONS=20

# Code Extraction Configuration
CODE_MAX_CODE_BLOCK_SIZE=50000
CODE_PRESERVE_CONTEXT_CHARS=500
CODE_MIN_CODE_LINES=2
CODE_EXTRACT_FUNCTIONS=true
CODE_EXTRACT_IMPORTS=true
CODE_DETECT_FRAMEWORKS=true

# Search Configuration
SEARCH_MAX_RESULTS=50
SEARCH_ENABLE_FUZZY_SEARCH=true
SEARCH_BOOST_RECENT_DAYS=7
SEARCH_SNIPPET_PREVIEW_LENGTH=200
SEARCH_DEFAULT_MAX_RESULTS=10
SEARCH_MIN_SCORE=0.1

# Environment Configuration
ENVIRONMENT=development
DEBUG=false
OUTPUT_SEPARATOR=----------------------------------------

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE=logs/codedox.log
LOG_MAX_SIZE=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Optional: OpenAI Configuration (if using OpenAI for LLM)
# OPENAI_API_KEY=your-openai-api-key

# Optional: Anthropic Configuration (if using Claude for LLM)
# ANTHROPIC_API_KEY=your-anthropic-api-key